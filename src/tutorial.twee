:: Start [disconnect]

Welcome to the Buttplug Interactive Tutorial. This tutorial will take you through the basics of getting your hardware up and running with Buttplug, as well as showing you how to use a few different applications.

<span id="waitlink">Wait just a moment while we load the Buttplug Library...</span>

<span id="introlink" class="hide">[[Let's get started.|Platform Selection]]</span>

<<buttplugloaded>>
	<<addclass "#waitlink" "hide">>
	<<removeclass "#introlink" "hide">>
<</buttplugloaded>>

:: Platform Selection [disconnect]

First off, we're going to need to know which operating system you're running.
<!--
TODO: Fill this in once we have platform detection code running.

It looks like you're running (Insert Operation System Detection Here).

If the above is incorrect, or if you're interested in checking out a
tutorial about another operating system, use one of the links below to
choose the operating system you're using.
-->
<<nobr>>
<ul>
<<for _os range [$win7, $win10, $macos, $ios, $linux, $android, $chromeos]>>
<li><<ossuplink _os>></li>
<</for>>
</ul>
<</nobr>>
:: Toy Compatibility [disconnect]

We support the following hardware on ''$opsys'':
<<nobr>>
<ul>
<<toycompat "XBox 360/XBox One Compatible Gamepads" `[$win7, $win10]`>>
<<toycompat "Erostek ET312B" `[$win7, $win10]`>>
<<bluetooth "Fleshlight Launch">>
<<bluetooth "Vorze A10 Cyclone">>
<<bluetooth "Lovense Toys (Max/Nora/Hush/Lush/Ambi/Edge/Osci/Domi)">>
<<bluetooth "WeVibe Toys (4/4 Plus/Ditto/Nova/Pivot/Wish/Verge/Cougar)">>
<<bluetooth "Magic Motion Toys">>
<<bluetooth "Vibratissimo Toys">>
<<bluetooth "Youcups Warrior II">>
</ul>
<</nobr>>

If you don't see the hardware you have here or if the list is empty, don't worry! You can still check out the rest of this tutorial, we have tools that will let you see what a toy would do.

If you have hardware we don't currently support, [[let us know on our message board so we can get that fixed |https://metafetish.club/t/survey-which-devices-and-operating-systems-would-you-like-to-see-supported/66]]!

[[Let's talk about connecting to a server|Connecting to a Server]]!

:: Connecting to a Server [disconnect]

Here's a list of ways you can use Buttplug on ''$opsys''.

<div id="websocketapp" class="hide">
!! Websocket Server

The websocket server application runs on your computer, and allows other applications and webpages to use Buttplug to control toys.

[[Let's get the application installed!|Windows Websocket Server Installation]]
</div>
<div id="inbrowser" class="hide">
!! In Your Browser
If you're using a browser that has WebBluetooth available, you don't need an outside application to use Buttplug. Everything you need is built into your browser.
<<if navigator.bluetooth>>
Your browser has bluetooth capabilities.
<<link "Let's get connected!">>
<!-- At this point, we can go ahead and connect locally, since that will never fail -->
<<buttplugconnectlocal>>
<<connecting>>
<<success>>
<<goto "Scan For Devices">>
<<failure>>
<</buttplugconnectlocal>>
<</link>>
<<else>>
It looks like you're running a browser that doesn't have WebBluetooth capabilities, which means we can't use it control hardware.
The only browser that currently supports WebBluetooth is [[Google Chrome|https://google.com/chrome]] Version 56 or higher on macOS, Linux, Android, or iOS. We hope this capability will be coming to Firefox in the nearish future.

If you'd like to continue the tutorial, check out the "Developer Tools" section below.
Otherwise, you can [[go back to the platform selection screen|Platform Selection]], or <<link "Restart the tutorial">><<reset>><</link>>.
<</if>>
</div>
<div id="mobile" class="hide">
!! Mobile App
If you're on iOS or Android, we have a mobile app available! Or at least, we will. Someday. This space will have more information about that once it's actually a thing.
</div>\
<div>
!! Try The Developer Tools
Don't have a device handy, or on a platform we don't have hardware access on yet, but just want to see how things work?
You can use our developer tools to visualize how toys will move, without having to worry about hooking things up!
[[Let's check out the Dev Tools!|Developer Tools]]
</div>

:: Windows Websocket Server Installation

To install the Websocket Server, you'll need to get the installer.

[[The installer is available on github.|https://github.com/metafetish/buttplug-csharp/releases]]

Once you've got that downloaded and installed, [[we can move on to trying to connect.|Websocket Browser Connection]]

:: Websocket Browser Connection

Now then, go to the start menu, and start the Websocket Server.

Make sure that the "SSL/TLS" box is checked.

Assuming you're running your web browser on the same machine as the Buttplug Server, you shouldn't need to change the host address. However, if you're running your browser on one machine and the server on another, change the value below to use the address of the server.

Host Address: <<textbox "$hostaddr" "wss://localhost:12345/buttplug" autofocus>>

<div id="initialconnect">
<<link "Click here to try to connect">><<wsconnect>><<addclass "#initialconnect" "hide">><</link>>
</div>

<div id="connector" class="hide">
Trying to connect, just a second...
</div>

<div id="success" class="hide">
Great, you've connected! You should now see something like this status on the websocket server dialog:
[[Now we can scan for devices.|Scan For Devices]]
</div>

<div id="failure" class="hide">
The connection failed. If you look at the server dialog, you may see something like this:
This means we need to set up the self-signed security certificate in your browser.
To do this, we'll need to visit the websocket server, then accept the certificate.

<<nobr>>
<<link "Click here to open a new tab and accept the certificate.">>
<<script>>
window.open(State.variables.hostaddr.replace("wss://", "https://"), '_blank').focus();
<</script>>
<</link>>
<</nobr>>

Once that's done, <<link "Click here to try to connecting again.">><<wsconnect>><</link>>
</div>

:: Developer Tools

The Buttplug Developer Tools allow you to see information about how Buttplug works, as well as use test devices instead of real ones (because long term QA can chafe). While the developer tools come with the Buttplug Library, they may not always be available in every application that uses Buttplug.

On the side menu of this tutorial, there are two options available.

* "Show Log Panel" will bring up a floating panel that shows the internal logs of the Buttplug client and server. This is useful for debugging applications or seeing why things break.
* "Show Device Panel" will bring up a floating panel that shows test devices. These devices can be connected to and will send/receive commands like an actual hardware device. They will also animate based on the commands sent to them.

For now, open the Device Panel by hitting the link in the sidebar or <<link "just clicking here">><<buttplugdevtoolsshowdevices>><</link>>, as you'll want to have those in view for the rest of the tutorial.

<<link "Now, let's scan for devices.">>
<<buttplugconnectdevtools>>
<<connecting>>
<<success>>
<<goto "Scan For Devices">>
<<failure>>
<</buttplugconnectdevtools>>
<</link>>

:: Scan For Devices
Let's see what devices we can discover.

If you're going to try this with a bluetooth device, turn it on now and put it close by.

<div id="startscanning">
<<link "Click here to start scanning">>
<<buttplugstartscanning>>
<<addclass "#startscanning" "hide">>
<<removeclass "#stopscanning" "hide">>
<</link>>
</div>
<div id="stopscanning" class="hide">
<<link "Click here to stop scanning">>
<<buttplugstopscanning>>
<<addclass "#stopscanning" "hide">>
<<removeclass "#startscanning" "hide">>
<</link>>
</div>
<div id="devicediv" class="hide">
<b>Devices Found:</b>
<ul id="devicelist">
</ul>
</div>
<<buttplugdeviceadded>>
<<removeclass "#devicediv" "hide">>
<<removeclass "#devicefound" "hide">>
<<append "#devicelist">><li>_device.Name</li><</append>>
<</buttplugdeviceadded>>
<<buttplugscanningfinished>>
<<addclass "#stopscanning" "hide">>
<<removeclass "#startscanning" "hide">>
<</buttplugscanningfinished>>

<div id="devicefound" class="hide">
Now that we've found some devices, [[let's send them some commands|Test Devices]].
</div>

:: Test Devices

Below is a list of your currently connected devices, along with various actions they can run. If you click the link, the device will perform the specified action. Give it a shot!

<<nobr>>
<ul>
<<for _device range setup.bpDevices>>
<<capture _device>>
<li>_device.name</li>
<ul>
<<for _msg range _device.AllowedMessages>>
<<if _msg eq "SingleMotorVibrateCmd">>
  <li>
  <<link "Click here to Vibrate for 1 second">>
  <<buttplugsinglemotorvibrate _device 1.0>><</buttplugsinglemotorvibrate>>
  <<timed 1s>>
    <<buttplugsinglemotorvibrate _device 0.0>><</buttplugsinglemotorvibrate>>
  <</timed>>
  <</link>>
  </li>
<</if>>
<<if _msg eq "FleshlightLaunchFW12Cmd">>
  <li>
  <<link "Click here to move back and forth once">>
  <<buttplugfleshlightlaunchfw12 _device 60 20>><</buttplugfleshlightlaunchfw12>>
  <<timed 1s>>
    <<buttplugfleshlightlaunchfw12 _device 60 80>><</buttplugfleshlightlaunchfw12>>
    <<next>><<buttplugfleshlightlaunchfw12 _device 60 20>><</buttplugfleshlightlaunchfw12>>
  <</timed>>
  <</link>>
  </li>
<</if>>
<</for>>
</ul>
<</capture>>
<</for>>
</ul>
<</nobr>>

Once you're done playing with that, [[it's time to finish up and send you on your way.|What Next]]

:: What Next

Now that you've got everything set up and tested, here are some other applications to try:

<ul>
<li>[[Buttplug Playground|https://buttplug.world/playground]] - a simple test application for making sure your toys work with Buttplug. Also handy for simple control of toys</li>
<li>[[Syncydink]] - a web-based hardware synced movie player.</li>
<<if [$win7, $win10].includes($opsys)>>\
<li>[[ScriptPlayer|https://github.com/FredTungsten/ScriptPlayer]] - A Windows Native Movie Player with hardware sync capabilities.</li>
<li>Game Vibrator Router - This installed alongside your Websocket server. You can use it to route vibration commands video games send to sex toys and other hardware!</li>
<</if>>\
</ul>

Check back on this tutorial every so often, we'll be expanding it to cover new features and applications!

:: Syncydink

:: ScriptPlayer

